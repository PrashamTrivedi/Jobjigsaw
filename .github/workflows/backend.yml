name: Deploy Backend

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set Environment Variables
        run: |
          echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> .env
          echo SERP_API_KEY=${{ secrets.SERP_API_KEY }} >> .env
          echo DEFAULT_OPENAI_MODEL=${{ secrets.DEFAULT_OPENAI_MODEL }} >> .env
          echo OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }} >> .env
          echo OPENROUTER_API_URL=${{ secrets.OPENROUTER_API_URL }} >> .env
          echo OPTIONAL_MODEL=${{ secrets.OPTIONAL_MODEL }} >> .env
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest